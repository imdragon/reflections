When would you want to create a remote repository rather than keeping all your work local?
  You would want to do this most of the time, as it would give you the ability to work from more than one machine and also provide a backup of all work that you are doing in case something were to happen to your local repository.
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	You maintain control and may be working on something that is not ready to be pushed to the remote.  In keeping manual control of updates, you have the option of when to open the flood gates and also are aware of issues as they happen instead of them happening when you are not aware.
Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Forks is the way that GitHub clones a repository and retains a reference to the original owner.  Clones are how you copy a repository to your computer or another directory on your computer.  Branches are different paths on the master which can be merged back later consolidating changes.
What is the benefit of having a copy of the last known state of the remote stored locally?
	The benefit of this is that you can see what other people are working on and also have the most up to date version of everything if you are without internet access for some time.
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Without Git or GitHub I would probably use something like Dropbox as it has version control and comments on files available.  Couple with that email or instant messaging to do collaboration.  Other than that, some live editing platform like Google Docs could also be used to see code right away.  It would be easier to understand at first but definitely harder to merge and keep more accurante track of all files.
When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	You would want to make changed in a separate branch when you are adding something new or experimenting on the code to add a new feature.  The benefits of working on a separate branch are that you don't risk breaking already working code.  The downside is that if you're not working on master, you will have to merge later and that can be complicated if there are conflicts.